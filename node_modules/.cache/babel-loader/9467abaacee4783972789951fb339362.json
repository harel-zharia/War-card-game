{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harel\\\\OneDrive\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\my react practice\\\\myapp\\\\src\\\\Components\\\\JSXcomponents\\\\NewCustomer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { Navigate, useNavigate } from 'react-router-dom';\nimport CustomerContext from \"./customer-context\";\nimport \"../CSScomponents/NewCostumer.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewCostumer(props) {\n  _s();\n\n  const nav = useNavigate();\n  const {\n    customers,\n    addCustomer\n  } = useContext(CustomerContext);\n  const [name, setName] = useState(\"\");\n  const [id, setId] = useState();\n  const [address, setAddress] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState();\n  const [plateNumber, setPlateNumber] = useState();\n  const customer = {};\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n\n    if (!isNaN(name)) {\n      alert(\"name must contain letters only\");\n      return;\n    }\n\n    if (typeof id !== \"number\" && id.length !== 9) {\n      alert(\"id must contain 9 digits\");\n      return;\n    }\n\n    if (phoneNumber.length < 7 && phoneNumber.length > 9) {\n      alert(\"this area must contain between 7-9 digits\");\n      return;\n    }\n\n    if (plateNumber.length < 7 && plateNumber.length > 9) {\n      alert(\"not a valid number\");\n      return;\n    }\n\n    const customer = {\n      id,\n      name,\n      address,\n      phoneNumber,\n      plateNumber\n    };\n    addCustomer(customer);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-costumer-form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmitHandler,\n      className: \"new-costumer-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Enter your details here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"new-costumer-inputs\",\n        type: \"text\",\n        onChange: e => {\n          setName(e.target.value);\n        },\n        placeholder: \"Full name (letters only)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"new-costumer-inputs\",\n        type: \"text\",\n        onChange: e => {\n          setId(e.target.value);\n        },\n        placeholder: \"Identification number (numbers only)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"new-costumer-inputs\",\n        type: \"text\",\n        onChange: e => {\n          setAddress(e.target.value);\n        },\n        placeholder: \"Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"new-costumer-inputs\",\n        type: \"text\",\n        onChange: e => {\n          setPhoneNumber(e.target.value);\n        },\n        placeholder: \"Mobile/Phone number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"new-costumer-inputs\",\n        type: \"text\",\n        onChange: e => {\n          setPlateNumber(e.target.value);\n        },\n        placeholder: \"Plate number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewCostumer, \"7V1tt6VFB/aZw8YHNlI8T9SimEo=\", false, function () {\n  return [useNavigate];\n});\n\n_c = NewCostumer;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewCostumer\");","map":{"version":3,"names":["React","useState","useContext","Navigate","useNavigate","CustomerContext","NewCostumer","props","nav","customers","addCustomer","name","setName","id","setId","address","setAddress","phoneNumber","setPhoneNumber","plateNumber","setPlateNumber","customer","onSubmitHandler","e","preventDefault","isNaN","alert","length","target","value"],"sources":["C:/Users/harel/OneDrive/שולחן העבודה/my react practice/myapp/src/Components/JSXcomponents/NewCustomer.jsx"],"sourcesContent":["import React, { useState,useContext } from 'react';\r\nimport {Navigate, useNavigate} from 'react-router-dom';\r\nimport CustomerContext from \"./customer-context\";\r\nimport \"../CSScomponents/NewCostumer.css\";\r\n\r\nexport default function NewCostumer(props) {\r\n  const nav = useNavigate();\r\n  const { customers, addCustomer } = useContext(CustomerContext);\r\n  const [name, setName] = useState(\"\");\r\n  const [id, setId] = useState();\r\n  const [address, setAddress] = useState(\"\");\r\n  const [phoneNumber, setPhoneNumber] = useState();\r\n  const [plateNumber, setPlateNumber] = useState();\r\n\r\n  const customer = {};\r\n\r\n  const onSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (!isNaN(name)) {\r\n      alert(\"name must contain letters only\");\r\n      return;\r\n    }\r\n    if (typeof id !== \"number\" && id.length !== 9) {\r\n      alert(\"id must contain 9 digits\");\r\n      return;\r\n    }\r\n    if (phoneNumber.length < 7 && phoneNumber.length > 9) {\r\n      alert(\"this area must contain between 7-9 digits\");\r\n      return;\r\n    }\r\n    if (plateNumber.length < 7 && plateNumber.length > 9) {\r\n      alert(\"not a valid number\");\r\n      return;\r\n    }\r\n    const customer = { id, name, address, phoneNumber, plateNumber };\r\n    addCustomer(customer);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-costumer-form\">\r\n      <form onSubmit={onSubmitHandler} className=\"new-costumer-form\">\r\n        <h1>Enter your details here</h1>\r\n        <input\r\n          className=\"new-costumer-inputs\"\r\n          type=\"text\"\r\n          onChange={(e) => {\r\n            setName(e.target.value);\r\n          }}\r\n          placeholder=\"Full name (letters only)\"\r\n        />\r\n        <br />\r\n        <input\r\n          className=\"new-costumer-inputs\"\r\n          type=\"text\"\r\n          onChange={(e) => {\r\n            setId(e.target.value);\r\n          }}\r\n          placeholder=\"Identification number (numbers only)\"\r\n        />\r\n        <br />\r\n        <input\r\n          className=\"new-costumer-inputs\"\r\n          type=\"text\"\r\n          onChange={(e) => {\r\n            setAddress(e.target.value);\r\n          }}\r\n          placeholder=\"Address\"\r\n        />\r\n        <br />\r\n        <input\r\n          className=\"new-costumer-inputs\"\r\n          type=\"text\"\r\n          onChange={(e) => {\r\n            setPhoneNumber(e.target.value);\r\n          }}\r\n          placeholder=\"Mobile/Phone number\"\r\n        />\r\n        <br />\r\n        <input\r\n          className=\"new-costumer-inputs\"\r\n          type=\"text\"\r\n          onChange={(e) => {\r\n            setPlateNumber(e.target.value);\r\n          }}\r\n          placeholder=\"Plate number\"\r\n        />\r\n        <br />\r\n        <button>Register</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}