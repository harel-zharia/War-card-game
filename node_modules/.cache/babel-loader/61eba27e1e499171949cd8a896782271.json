{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harel\\\\OneDrive\\\\\\u05E9\\u05D5\\u05DC\\u05D7\\u05DF \\u05D4\\u05E2\\u05D1\\u05D5\\u05D3\\u05D4\\\\my react practice\\\\myapp\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport HomePage from './Component/HomePage';\nimport GamePage from \"./Component/GamePage\";\nimport ScorePage from './Component/ScorePage';\nimport './Component/Card.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet player, computer;\nlet playerList = [];\n\nfunction App() {\n  _s();\n\n  const [component, setComponent] = useState(0);\n\n  const showComponent = () => {\n    if (component == 0) {\n      return /*#__PURE__*/_jsxDEV(HomePage, {\n        next: startGame,\n        playerList: playerList,\n        computer: computer,\n        playerOne: player,\n        firstPlace: firstPlace\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 14\n      }, this);\n    } else if (component == 1) {\n      return /*#__PURE__*/_jsxDEV(GamePage, {\n        player: player,\n        computer: computer,\n        nextPage: setComponent,\n        playerList: playerList,\n        wins: player.wins\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(ScorePage, {\n      player: player,\n      computer: computer,\n      pageReset: setComponent,\n      shuffle: shuffle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  };\n\n  const startGame = name => {\n    let fullDeck = new Deck();\n    let playerDeck = [],\n        ComputerDeck = [];\n\n    for (let i = 0; i < 26; i++) {\n      playerDeck.push(fullDeck.dealCards());\n      ComputerDeck.push(fullDeck.dealCards());\n    }\n\n    let isPlayerAlreadyPlayed = false;\n\n    for (let i = 0; i < playerList.length; i++) {\n      let currentPlayer = playerList[i];\n\n      if (currentPlayer.name == name) {\n        isPlayerAlreadyPlayed = true;\n        player = currentPlayer;\n        break;\n      }\n    }\n\n    if (!isPlayerAlreadyPlayed) {\n      player = new Player(name, playerDeck);\n      playerList.push(player);\n    }\n\n    computer = new Player('computer', ComputerDeck);\n    setComponent(1);\n  };\n\n  const shuffle = (player, computer) => {\n    let fullDeck = new Deck();\n    let playerDeck = [],\n        ComputerDeck = [];\n\n    for (let i = 0; i < 26; i++) {\n      playerDeck.push(fullDeck.dealCards());\n      ComputerDeck.push(fullDeck.dealCards());\n    }\n\n    player.cards = playerDeck;\n    computer.cards = ComputerDeck;\n  };\n\n  const firstPlace = () => {\n    playerList.wins.sort();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: showComponent()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"eyCy2VkTUq8vLdNk2V+swn6cIfY=\");\n\n_c = App;\nexport default App;\n\nclass Player {\n  constructor(name, cards) {\n    this.name = '';\n    this.wins = 0;\n    this.loses = 0;\n    this.games = 0;\n    this.tie = 0;\n    this.lastGame = false;\n    this.cards = [];\n    this.name = name;\n    this.cards = cards;\n  }\n\n}\n\nclass Deck {\n  constructor() {\n    this.cards = [];\n    this.startCards();\n  }\n\n  startCards() {\n    for (let i = 1; i < 14; i++) {\n      for (let j = 0; j < 4; j++) {\n        this.cards.push(i);\n      }\n    }\n  }\n\n  dealCards() {\n    let random = Math.floor(Math.random() * this.cards.length);\n    let card = this.cards.splice(random, 1);\n    return card[0];\n  }\n\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","HomePage","GamePage","ScorePage","player","computer","playerList","App","component","setComponent","showComponent","startGame","firstPlace","wins","shuffle","name","fullDeck","Deck","playerDeck","ComputerDeck","i","push","dealCards","isPlayerAlreadyPlayed","length","currentPlayer","Player","cards","sort","constructor","loses","games","tie","lastGame","startCards","j","random","Math","floor","card","splice"],"sources":["C:/Users/harel/OneDrive/שולחן העבודה/my react practice/myapp/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport HomePage from './Component/HomePage';\nimport GamePage from \"./Component/GamePage\";\nimport ScorePage from './Component/ScorePage';\nimport './Component/Card.css'\n\nlet player, computer;\nlet playerList = [];\n\nfunction App() {\n\n\n  const [component, setComponent] = useState(0);\n\n  const showComponent = () => {\n    if (component == 0) {\n      return <HomePage next={startGame} playerList={playerList} computer={computer} playerOne={player} firstPlace={firstPlace}></HomePage>\n    }\n    else if (component == 1) {\n      return <GamePage player={player} computer={computer} nextPage={setComponent} playerList={playerList} wins={player.wins}></GamePage>\n    }\n    return <ScorePage player={player} computer={computer} pageReset={setComponent} shuffle={shuffle}></ScorePage>\n  }\n\n  const startGame = (name) => {\n    let fullDeck = new Deck();\n    let playerDeck = [], ComputerDeck = [];\n    for (let i = 0; i < 26; i++) {\n      playerDeck.push(fullDeck.dealCards());\n      ComputerDeck.push(fullDeck.dealCards());\n    }\n    let isPlayerAlreadyPlayed = false;\n    for (let i = 0; i < playerList.length; i++) {\n      let currentPlayer = playerList[i];\n      if (currentPlayer.name == name) {\n        isPlayerAlreadyPlayed = true;\n        player = currentPlayer;\n        break;\n      }\n    }\n    if (!isPlayerAlreadyPlayed) {\n      player = new Player(name, playerDeck);\n      playerList.push(player);\n    }\n    computer = new Player('computer', ComputerDeck);\n    setComponent(1)\n  }\n\n  const shuffle = (player, computer) => {\n    let fullDeck = new Deck();\n    let playerDeck = [], ComputerDeck = [];\n    for (let i = 0; i < 26; i++) {\n      playerDeck.push(fullDeck.dealCards());\n      ComputerDeck.push(fullDeck.dealCards());\n    }\n    player.cards = playerDeck;\n    computer.cards = ComputerDeck;\n  }\n\n  const firstPlace = () => {\n    playerList.wins.sort();\n  }\n\n  return (\n    <div className=\"App\">\n      {showComponent()}\n    </div>\n  );\n}\n\nexport default App;\n\n\nclass Player {\n  name = '';\n  wins = 0;\n  loses = 0;\n  games = 0;\n  tie = 0;\n  lastGame = false;\n  cards = [];\n\n  constructor(name, cards) {\n    this.name = name;\n    this.cards = cards;\n  }\n}\n\nclass Deck {\n  cards = [];\n\n  constructor() {\n    this.startCards();\n  }\n  startCards() {\n    for (let i = 1; i < 14; i++) {\n      for (let j = 0; j < 4; j++) {\n        this.cards.push(i);\n      }\n    }\n\n  }\n  dealCards() {\n    let random = Math.floor(Math.random() * this.cards.length);\n    let card = this.cards.splice(random, 1);\n    return card[0];\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}